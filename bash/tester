#!/usr/bin/env bash

# Process:
# Load up 24 x 10000 objects
# Wait 2 minutes
# Delete all objects
# Wait 2 minutes
# Re-insert objects
# Check objects

source ./common.bash

test_object='tester.obj'

dd if=/dev/urandom bs=65536 count=1 2>/dev/null | openssl enc -a > $test_object

function object_loader
{
  local -i loader_id=$1
  pinfo "starting loader with id: $loader_id"

  local -i j=0
  for ((j=0; j < object_count; ++j))
  do
    local host="$(curl_host)"
    curl_exec 'object_loader' -H'Content-Type: text/plain' -XPUT "$host/buckets/bucket-$loader_id/keys/$j" --data-binary "@$test_object"
    # curl_exec 'object_loader' -H'Content-Type: text/plain' -XPUT "$host/buckets/bucket-$loader_id/keys/$j" -d "OBJECT $j"
  done

  pinfo "done - loader with id: $loader_id"
}

function object_checker
{
  local -i checker_id=$1
  pinfo "starting checker with id: $checker_id"

  local -i exec_rv=0
  local -i j=0
  for ((j=0; j < object_count; ++j))
  do
    local host="$(curl_host)"
    curl_exec 'object_checker' -XGET "$host/buckets/bucket-$checker_id/keys/$j"
    local -i exec_rv=$?
    if (( exec_rv != 0 ))
    then
      return $exec_rv
    fi
  done

  pinfo "done - checker with id: $checker_id"
  return 0 
}

function object_deleter
{
  local -i deleter_id=$1
  pinfo "starting deleter with id: $deleter_id"

  local -i j=0
  for ((j=0; j < object_count; ++j))
  do
    local host="$(curl_host)"
    # PW: curl_exec 'object_deleter' -XDELETE "$host/buckets/bucket-$deleter_id/keys/$j?pw=3"
    # NO PW: curl_exec 'object_deleter' -XDELETE "$host/buckets/bucket-$deleter_id/keys/$j"
    curl_exec 'object_deleter' -XDELETE "$host/buckets/bucket-$deleter_id/keys/$j"
  done

  pinfo "done - deleter with id: $deleter_id"
}

nuke_all_objects
sleep $sleep_seconds

declare -i i=0

for ((i=0; i < num_procs; ++i))
do
  object_loader $i &
done

wait
pinfo 'initial load done'
sleep $sleep_seconds

while true
do
  for ((i=0; i < num_procs; ++i))
  do
    object_deleter $i &
  done

  wait
  pinfo 'object delete done'
  sleep $sleep_seconds

  for ((i=0; i < num_procs; ++i))
  do
    object_loader $i &
  done

  wait
  pinfo 'object load done'

  declare -ai pids
  for ((i=0; i < num_procs; ++i))
  do
    object_checker $i &
    pids[$i]=$!
  done

  declare -i errors=0
  declare -i completed=0
  for ((i = 0; completed < num_procs; ++i))
  do
    sleep 0.5
    if (( i == num_procs ))
    then
      (( i = 0 ))
    fi
    declare -i pid=${pids[$i]}
    if kill -0 $pid 2>/dev/null
    then
      pdebug "checker pid $pid still running"
    else
      if wait $pid
      then
        pdebug "checker pid $pid exited OK"
        (( ++completed ))
      else
        pdebug "checker pid $pid exited with error"
        (( ++errors ))
        (( ++completed ))
      fi
    fi
  done

  if (( errors > 0 ))
  then
    perr "exiting due to check errors"
    exit 1
  else
    pinfo 'object check done'
  fi

done

